package com.speedment.example.eventsourcing.calendar.event.booking_event.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.example.eventsourcing.calendar.event.booking_event.BookingEvent;
import com.speedment.example.eventsourcing.calendar.event.booking_event.generated.GeneratedBookingEvent.Type;
import com.speedment.runtime.core.util.OptionalUtil;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;
import java.util.UUID;

/**
 * The generated base implementation of the {@link
 * com.speedment.example.eventsourcing.calendar.event.booking_event.BookingEvent}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBookingEventImpl implements BookingEvent {
    
    private long seqNo;
    private byte version;
    private Type type;
    private UUID bookingId;
    private UUID userId;
    private UUID resourceId;
    private LocalDateTime bookFrom;
    private LocalDateTime bookTo;
    
    protected GeneratedBookingEventImpl() {
        
    }
    
    @Override
    public long getSeqNo() {
        return seqNo;
    }
    
    @Override
    public byte getVersion() {
        return version;
    }
    
    @Override
    public Type getType() {
        return type;
    }
    
    @Override
    public UUID getBookingId() {
        return bookingId;
    }
    
    @Override
    public Optional<UUID> getUserId() {
        return Optional.ofNullable(userId);
    }
    
    @Override
    public Optional<UUID> getResourceId() {
        return Optional.ofNullable(resourceId);
    }
    
    @Override
    public Optional<LocalDateTime> getBookFrom() {
        return Optional.ofNullable(bookFrom);
    }
    
    @Override
    public Optional<LocalDateTime> getBookTo() {
        return Optional.ofNullable(bookTo);
    }
    
    @Override
    public BookingEvent setSeqNo(long seqNo) {
        this.seqNo = seqNo;
        return this;
    }
    
    @Override
    public BookingEvent setVersion(byte version) {
        this.version = version;
        return this;
    }
    
    @Override
    public BookingEvent setType(Type type) {
        this.type = type;
        return this;
    }
    
    @Override
    public BookingEvent setBookingId(UUID bookingId) {
        this.bookingId = bookingId;
        return this;
    }
    
    @Override
    public BookingEvent setUserId(UUID userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public BookingEvent setResourceId(UUID resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    @Override
    public BookingEvent setBookFrom(LocalDateTime bookFrom) {
        this.bookFrom = bookFrom;
        return this;
    }
    
    @Override
    public BookingEvent setBookTo(LocalDateTime bookTo) {
        this.bookTo = bookTo;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("seqNo = "      + Objects.toString(getSeqNo()));
        sj.add("version = "    + Objects.toString(getVersion()));
        sj.add("type = "       + Objects.toString(getType()));
        sj.add("bookingId = "  + Objects.toString(getBookingId()));
        sj.add("userId = "     + Objects.toString(OptionalUtil.unwrap(getUserId())));
        sj.add("resourceId = " + Objects.toString(OptionalUtil.unwrap(getResourceId())));
        sj.add("bookFrom = "   + Objects.toString(OptionalUtil.unwrap(getBookFrom())));
        sj.add("bookTo = "     + Objects.toString(OptionalUtil.unwrap(getBookTo())));
        return "BookingEventImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof BookingEvent)) { return false; }
        final BookingEvent thatBookingEvent = (BookingEvent)that;
        if (this.getSeqNo() != thatBookingEvent.getSeqNo()) {return false; }
        if (this.getVersion() != thatBookingEvent.getVersion()) {return false; }
        if (!Objects.equals(this.getType(), thatBookingEvent.getType())) {return false; }
        if (!Objects.equals(this.getBookingId(), thatBookingEvent.getBookingId())) {return false; }
        if (!Objects.equals(this.getUserId(), thatBookingEvent.getUserId())) {return false; }
        if (!Objects.equals(this.getResourceId(), thatBookingEvent.getResourceId())) {return false; }
        if (!Objects.equals(this.getBookFrom(), thatBookingEvent.getBookFrom())) {return false; }
        if (!Objects.equals(this.getBookTo(), thatBookingEvent.getBookTo())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getSeqNo());
        hash = 31 * hash + Byte.hashCode(getVersion());
        hash = 31 * hash + Objects.hashCode(getType());
        hash = 31 * hash + Objects.hashCode(getBookingId());
        hash = 31 * hash + Objects.hashCode(getUserId());
        hash = 31 * hash + Objects.hashCode(getResourceId());
        hash = 31 * hash + Objects.hashCode(getBookFrom());
        hash = 31 * hash + Objects.hashCode(getBookTo());
        return hash;
    }
}