package com.speedment.example.eventsourcing.calendar.event.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.example.eventsourcing.calendar.event.BookingsApplication;
import com.speedment.example.eventsourcing.calendar.event.BookingsApplicationBuilder;
import com.speedment.example.eventsourcing.calendar.event.BookingsApplicationImpl;
import com.speedment.example.eventsourcing.calendar.event.booking_event.BookingEventManagerImpl;
import com.speedment.example.eventsourcing.calendar.event.booking_event.BookingEventSqlAdapter;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named booking_demo.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBookingsApplicationBuilder extends AbstractApplicationBuilder<BookingsApplication, BookingsApplicationBuilder> {
    
    protected GeneratedBookingsApplicationBuilder() {
        super(BookingsApplicationImpl.class, GeneratedBookingsMetadata.class);
        withManager(BookingEventManagerImpl.class);
        withComponent(BookingEventSqlAdapter.class);
    }
    
    @Override
    public BookingsApplication build(Injector injector) {
        return injector.getOrThrow(BookingsApplication.class);
    }
}